[{"C:\\Users\\Anushavan\\Desktop\\BitScoolHomework\\src\\App.js":"1","C:\\Users\\Anushavan\\Desktop\\BitScoolHomework\\src\\componets\\Task\\Task.jsx":"2","C:\\Users\\Anushavan\\Desktop\\BitScoolHomework\\src\\index.js":"3","C:\\Users\\Anushavan\\Desktop\\BitScoolHomework\\src\\componets\\Confirm\\index.jsx":"4","C:\\Users\\Anushavan\\Desktop\\BitScoolHomework\\src\\componets\\TaskModal\\TaskModal.jsx":"5","C:\\Users\\Anushavan\\Desktop\\BitScoolHomework\\src\\componets\\NavBar\\NavBar.jsx":"6","C:\\Users\\Anushavan\\Desktop\\BitScoolHomework\\src\\componets\\pages\\Todo\\Todo.jsx":"7","C:\\Users\\Anushavan\\Desktop\\BitScoolHomework\\src\\componets\\pages\\Contact\\Contact.jsx":"8","C:\\Users\\Anushavan\\Desktop\\BitScoolHomework\\src\\componets\\pages\\About\\About.jsx":"9","C:\\Users\\Anushavan\\Desktop\\BitScoolHomework\\src\\componets\\pages\\NotFound\\NotFound.jsx":"10","C:\\Users\\Anushavan\\Desktop\\BitScoolHomework\\src\\utils\\dateFormater.js":"11","C:\\Users\\Anushavan\\Desktop\\BitScoolHomework\\src\\componets\\SingleTask\\SingleTask.jsx":"12","C:\\Users\\Anushavan\\Desktop\\BitScoolHomework\\src\\componets\\Spinner\\Spinner.jsx":"13","C:\\Users\\Anushavan\\Desktop\\BitScoolHomework\\src\\componets\\ContactForm\\ContactForm.jsx":"14","C:\\Users\\Anushavan\\Desktop\\BitScoolHomework\\src\\utils\\validator.jsx":"15","C:\\Users\\Anushavan\\Desktop\\BitScoolHomework\\src\\componets\\ContactForm\\ContactFormWithHooks.jsx":"16","C:\\Users\\Anushavan\\Desktop\\BitScoolHomework\\src\\componets\\Context\\context.js":"17","C:\\Users\\Anushavan\\Desktop\\BitScoolHomework\\src\\componets\\Context\\ContactProvider\\ContactProvider.jsx":"18","C:\\Users\\Anushavan\\Desktop\\BitScoolHomework\\src\\componets\\Context\\ContactProvider\\SingleTaskProvider.jsx":"19","C:\\Users\\Anushavan\\Desktop\\BitScoolHomework\\src\\componets\\ContactForm\\ContactFormWithReducer.jsx":"20","C:\\Users\\Anushavan\\Desktop\\BitScoolHomework\\src\\componets\\SingleTask\\SingleTaskWithReducer.jsx":"21","C:\\Users\\Anushavan\\Desktop\\BitScoolHomework\\src\\Redux\\store.js":"22"},{"size":2384,"mtime":1618165609423,"results":"23","hashOfConfig":"24"},{"size":2387,"mtime":1617985242818,"results":"25","hashOfConfig":"24"},{"size":593,"mtime":1618150463933,"results":"26","hashOfConfig":"24"},{"size":975,"mtime":1616358902898,"results":"27","hashOfConfig":"24"},{"size":4105,"mtime":1617001096888,"results":"28","hashOfConfig":"24"},{"size":923,"mtime":1616611403747,"results":"29","hashOfConfig":"24"},{"size":9937,"mtime":1618168971488,"results":"30","hashOfConfig":"24"},{"size":680,"mtime":1617984923785,"results":"31","hashOfConfig":"24"},{"size":138,"mtime":1616605283085,"results":"32","hashOfConfig":"24"},{"size":159,"mtime":1616610616085,"results":"33","hashOfConfig":"24"},{"size":92,"mtime":1616478461616,"results":"34","hashOfConfig":"24"},{"size":4603,"mtime":1618168134632,"results":"35","hashOfConfig":"24"},{"size":390,"mtime":1616772319532,"results":"36","hashOfConfig":"24"},{"size":4821,"mtime":1617435759953,"results":"37","hashOfConfig":"24"},{"size":629,"mtime":1617430012534,"results":"38","hashOfConfig":"24"},{"size":2801,"mtime":1617780929337,"results":"39","hashOfConfig":"24"},{"size":145,"mtime":1617864243847,"results":"40","hashOfConfig":"24"},{"size":3116,"mtime":1617781013742,"results":"41","hashOfConfig":"24"},{"size":2524,"mtime":1617992396183,"results":"42","hashOfConfig":"24"},{"size":6005,"mtime":1617996853503,"results":"43","hashOfConfig":"24"},{"size":5008,"mtime":1617996639106,"results":"44","hashOfConfig":"24"},{"size":3994,"mtime":1618168122311,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"c9s6iy",{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"57"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Anushavan\\Desktop\\BitScoolHomework\\src\\App.js",[],"C:\\Users\\Anushavan\\Desktop\\BitScoolHomework\\src\\componets\\Task\\Task.jsx",[],"C:\\Users\\Anushavan\\Desktop\\BitScoolHomework\\src\\index.js",[],"C:\\Users\\Anushavan\\Desktop\\BitScoolHomework\\src\\componets\\Confirm\\index.jsx",[],["97","98"],"C:\\Users\\Anushavan\\Desktop\\BitScoolHomework\\src\\componets\\TaskModal\\TaskModal.jsx",[],["99","100"],"C:\\Users\\Anushavan\\Desktop\\BitScoolHomework\\src\\componets\\NavBar\\NavBar.jsx",[],["101","102"],"C:\\Users\\Anushavan\\Desktop\\BitScoolHomework\\src\\componets\\pages\\Todo\\Todo.jsx",[],"C:\\Users\\Anushavan\\Desktop\\BitScoolHomework\\src\\componets\\pages\\Contact\\Contact.jsx",[],"C:\\Users\\Anushavan\\Desktop\\BitScoolHomework\\src\\componets\\pages\\About\\About.jsx",[],["103","104"],"C:\\Users\\Anushavan\\Desktop\\BitScoolHomework\\src\\componets\\pages\\NotFound\\NotFound.jsx",[],"C:\\Users\\Anushavan\\Desktop\\BitScoolHomework\\src\\utils\\dateFormater.js",[],"C:\\Users\\Anushavan\\Desktop\\BitScoolHomework\\src\\componets\\SingleTask\\SingleTask.jsx",["105"],"import { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Button } from 'react-bootstrap';\r\nimport TaskModal from '../TaskModal/TaskModal';\r\nimport SpinnerComp from '../Spinner/Spinner';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTrash, faEdit } from '@fortawesome/free-solid-svg-icons';\r\nimport styles from './singletask.module.css';\r\n\r\nconst API_HOST = 'http://localhost:3001';\r\n\r\nconst SingleTask = (props) => {\r\n    const {\r\n        singgleTasks,\r\n        isEditeModal,\r\n        toggleEditModal,\r\n        setOrRemoveLoading,\r\n        setSinggleTasks,\r\n        setisOpenConfirm,\r\n        loading,\r\n    } = props;\r\n\r\n    useEffect(() => {\r\n        getSingleTask();\r\n    }, []);\r\n\r\n    const handleEditeTask = (editTask) => {\r\n        setOrRemoveLoading(true);\r\n        fetch(`${API_HOST}/task/${editTask._id}`, {\r\n            method: 'PUT',\r\n            body: JSON.stringify(editTask),\r\n            headers: { 'Content-Type': 'application/json' },\r\n        })\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                if (data.error) throw data.error;\r\n                setSinggleTasks(data);\r\n                toggleEditModal(false);\r\n            })\r\n            .catch((error) => console.log('Single Task edited', error))\r\n            .finally(() => setOrRemoveLoading(false));\r\n    };\r\n    const handleDelet = () => {\r\n        const { _id } = singgleTasks;\r\n        setOrRemoveLoading(true);\r\n        fetch(`${API_HOST}/task/${_id}`, {\r\n            method: 'DELETE',\r\n        })\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                if (data.error) throw console.log(data.error);\r\n                setisOpenConfirm(false);\r\n                setOrRemoveLoading(false);\r\n                props.history.push('/');\r\n            })\r\n            .catch((err) => console.log('Single Task Deleting error', err));\r\n    };\r\n\r\n    const getSingleTask = () => {\r\n        const { id } = props.match.params;\r\n        fetch(`${API_HOST}/task/${id}`)\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                if (data.error) throw data.error;\r\n                setSinggleTasks(data);\r\n            })\r\n            .catch((error) => {\r\n                console.log('Single Task Get request', error.message);\r\n                props.history.push('/404');\r\n            });\r\n    };\r\n\r\n    // if (!singgleTasks || loading) return <SpinnerComp />;\r\n\r\n    return (\r\n        <>\r\n            <div className={styles.signgleTask}>\r\n                <h1>Single Task</h1>\r\n                <div>\r\n                    <p>Title: {singgleTasks.title}</p>\r\n                    <p>Description: {singgleTasks.description}</p>\r\n                </div>\r\n                <div className={styles.btn_div}>\r\n                    <Button\r\n                        variant=\"warning\"\r\n                        className={styles.btn}\r\n                        onClick={() => toggleEditModal(true)}\r\n                    >\r\n                        <FontAwesomeIcon icon={faEdit} />\r\n                    </Button>\r\n                    <Button\r\n                        variant=\"danger\"\r\n                        className={styles.btn}\r\n                        onClick={handleDelet}\r\n                    >\r\n                        <FontAwesomeIcon icon={faTrash} />\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n            {isEditeModal && (\r\n                <TaskModal\r\n                    onHide={() => toggleEditModal(false)}\r\n                    onSubmit={handleEditeTask}\r\n                    editedTask={singgleTasks}\r\n                />\r\n            )}\r\n            {loading && <SpinnerComp />}\r\n        </>\r\n    );\r\n};\r\nconst mapStattoProps = (state) => {\r\n    return {\r\n        singleTask: state.singleTask.singgleTasks,\r\n        isEditeModal: state.singgleTasks.isEditeModal,\r\n        isOpenConfirm: state.singgleTasks.isOpenConfirm,\r\n    };\r\n};\r\nconst mapDispatchtoProps = (dispatch) => {\r\n    return {\r\n        setOrRemoveLoading: (isLoading) => {\r\n            dispatch({ type: 'SET_OR_REMOVE_LOADING', isLoading });\r\n        },\r\n        toggleEditModal: (isToggleEditModal) => {\r\n            dispatch({ type: 'TOGGLE_EDITE_MODAL', isToggleEditModal });\r\n        },\r\n        setSinggleTasks: (data) => {\r\n            dispatch({ type: 'SET_SINGGLE_TASKS', data });\r\n        },\r\n        setisOpenConfirm: () => {\r\n            dispatch({ type: 'SET_IS_OPEN_CONFIRM' });\r\n        },\r\n    };\r\n};\r\nexport default connect(mapStattoProps, mapDispatchtoProps)(SingleTask);\r\n","C:\\Users\\Anushavan\\Desktop\\BitScoolHomework\\src\\componets\\Spinner\\Spinner.jsx",[],"C:\\Users\\Anushavan\\Desktop\\BitScoolHomework\\src\\componets\\ContactForm\\ContactForm.jsx",[],"C:\\Users\\Anushavan\\Desktop\\BitScoolHomework\\src\\utils\\validator.jsx",[],"C:\\Users\\Anushavan\\Desktop\\BitScoolHomework\\src\\componets\\ContactForm\\ContactFormWithHooks.jsx",[],"C:\\Users\\Anushavan\\Desktop\\BitScoolHomework\\src\\componets\\Context\\context.js",[],"C:\\Users\\Anushavan\\Desktop\\BitScoolHomework\\src\\componets\\Context\\ContactProvider\\ContactProvider.jsx",[],["106","107"],"C:\\Users\\Anushavan\\Desktop\\BitScoolHomework\\src\\componets\\Context\\ContactProvider\\SingleTaskProvider.jsx",[],"C:\\Users\\Anushavan\\Desktop\\BitScoolHomework\\src\\componets\\ContactForm\\ContactFormWithReducer.jsx",[],"C:\\Users\\Anushavan\\Desktop\\BitScoolHomework\\src\\componets\\SingleTask\\SingleTaskWithReducer.jsx",["108"],"import { useEffect, useReducer } from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport TaskModal from '../TaskModal/TaskModal';\r\nimport SpinnerComp from '../Spinner/Spinner';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTrash, faEdit } from '@fortawesome/free-solid-svg-icons';\r\nimport styles from './singletask.module.css';\r\n\r\nconst API_HOST = 'http://localhost:3001';\r\n\r\nconst initialState = {\r\n    singgleTasks: null,\r\n    toggleEditeModal: false,\r\n    loading: false,\r\n};\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'SET_SINGLE_TASK': {\r\n            return {\r\n                ...state,\r\n                singgleTasks: action.data,\r\n            };\r\n        }\r\n        case 'SET_LOADING': {\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n            };\r\n        }\r\n        case 'REMOVE_LOADING': {\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n            };\r\n        }\r\n        case 'TOGGLE_EDITE_MODAL': {\r\n            return {\r\n                ...state,\r\n                toggleEditeModal: action.isEditeModal,\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nconst SingleTaskWithReduce = (props) => {\r\n    const [state, dispatch] = useReducer(reducer, initialState);\r\n    const { singgleTasks, toggleEditeModal, loading } = state;\r\n\r\n    useEffect(() => {\r\n        const { id } = props.match.params;\r\n        fetch(`${API_HOST}/task/${id}`)\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                if (data.error) throw data.error;\r\n                dispatch({ type: 'SET_SINGLE_TASK', data });\r\n            })\r\n            .catch((error) => {\r\n                console.log('Single Task Get request', error.message);\r\n                props.history.push('/404');\r\n            });\r\n    }, []);\r\n\r\n    if (!singgleTasks || loading) return <SpinnerComp />;\r\n\r\n    const handleDelet = () => {\r\n        const { _id } = singgleTasks;\r\n        dispatch({ type: 'SET_LOADING' });\r\n        fetch(`${API_HOST}/task/${_id}`, {\r\n            method: 'DELETE',\r\n        })\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                if (data.error) throw console.log(data.error);\r\n                dispatch({ type: 'REMOVE_LOADING' });\r\n                props.history.push('/');\r\n            })\r\n            .catch((err) => console.log('Single Task Deleting error', err));\r\n    };\r\n\r\n    const handleEditeTask = (editTask) => {\r\n        dispatch({ type: 'SET_LOADING' });\r\n        fetch(`${API_HOST}/task/${editTask._id}`, {\r\n            method: 'PUT',\r\n            body: JSON.stringify(editTask),\r\n            headers: { 'Content-Type': 'application/json' },\r\n        })\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                if (data.error) throw data.error;\r\n                dispatch({ type: 'SET_SINGLE_TASK', data });\r\n                dispatch({ type: 'TOGGLE_EDITE_MODAL', isEditeModal: false });\r\n            })\r\n            .catch((error) => console.log('Single Task edited', error))\r\n            .finally(() => dispatch({ type: 'REMOVE_LOADING' }));\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className={styles.signgleTask}>\r\n                <h1>Single Task</h1>\r\n                <div>\r\n                    <p>Title: {singgleTasks && singgleTasks.title}</p>\r\n                    <p>\r\n                        Description: {singgleTasks && singgleTasks.description}\r\n                    </p>\r\n                </div>\r\n                <div className={styles.btn_div}>\r\n                    <Button\r\n                        variant=\"warning\"\r\n                        className={styles.btn}\r\n                        onClick={() =>\r\n                            dispatch({\r\n                                type: 'TOGGLE_EDITE_MODAL',\r\n                                isEditeModal: true,\r\n                            })\r\n                        }\r\n                    >\r\n                        <FontAwesomeIcon icon={faEdit} />\r\n                    </Button>\r\n                    <Button\r\n                        variant=\"danger\"\r\n                        className={styles.btn}\r\n                        onClick={handleDelet}\r\n                    >\r\n                        <FontAwesomeIcon icon={faTrash} />\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n            {toggleEditeModal && (\r\n                <TaskModal\r\n                    onHide={() =>\r\n                        dispatch({\r\n                            type: 'TOGGLE_EDITE_MODAL',\r\n                            isEditeModal: false,\r\n                        })\r\n                    }\r\n                    onSubmit={handleEditeTask}\r\n                    editedTask={singgleTasks}\r\n                />\r\n            )}\r\n            {loading && <SpinnerComp />}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SingleTaskWithReduce;\r\n","C:\\Users\\Anushavan\\Desktop\\BitScoolHomework\\src\\Redux\\store.js",[],{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","replacedBy":"112"},{"ruleId":"109","replacedBy":"113"},{"ruleId":"111","replacedBy":"114"},{"ruleId":"109","replacedBy":"115"},{"ruleId":"111","replacedBy":"116"},{"ruleId":"109","replacedBy":"117"},{"ruleId":"111","replacedBy":"118"},{"ruleId":"119","severity":1,"message":"120","line":25,"column":8,"nodeType":"121","endLine":25,"endColumn":10,"suggestions":"122"},{"ruleId":"109","replacedBy":"123"},{"ruleId":"111","replacedBy":"124"},{"ruleId":"119","severity":1,"message":"125","line":63,"column":8,"nodeType":"121","endLine":63,"endColumn":10,"suggestions":"126"},"no-native-reassign",["127"],"no-negated-in-lhs",["128"],["127"],["128"],["127"],["128"],["127"],["128"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getSingleTask'. Either include it or remove the dependency array.","ArrayExpression",["129"],["127"],["128"],"React Hook useEffect has missing dependencies: 'props.history' and 'props.match.params'. Either include them or remove the dependency array.",["130"],"no-global-assign","no-unsafe-negation",{"desc":"131","fix":"132"},{"desc":"133","fix":"134"},"Update the dependencies array to be: [getSingleTask]",{"range":"135","text":"136"},"Update the dependencies array to be: [props.history, props.match.params]",{"range":"137","text":"138"},[738,740],"[getSingleTask]",[1925,1927],"[props.history, props.match.params]"]