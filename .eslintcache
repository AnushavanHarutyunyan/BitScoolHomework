[{"/Users/anushavanharutyunyan/Desktop/project/BitScoolHomework/src/App.js":"1","/Users/anushavanharutyunyan/Desktop/project/BitScoolHomework/src/Redux/reducers/todoReducer.js":"2","/Users/anushavanharutyunyan/Desktop/project/BitScoolHomework/src/Redux/store.js":"3","/Users/anushavanharutyunyan/Desktop/project/BitScoolHomework/src/Redux/reducers/singleTaskReducer.js":"4","/Users/anushavanharutyunyan/Desktop/project/BitScoolHomework/src/componets/NavBar/NavBar.jsx":"5","/Users/anushavanharutyunyan/Desktop/project/BitScoolHomework/src/Redux/reducers/searchReducer.js":"6","/Users/anushavanharutyunyan/Desktop/project/BitScoolHomework/src/componets/Search/Search.jsx":"7","/Users/anushavanharutyunyan/Desktop/project/BitScoolHomework/src/componets/SingleTask/SingleTask.jsx":"8","/Users/anushavanharutyunyan/Desktop/project/BitScoolHomework/src/utils/validator.jsx":"9","/Users/anushavanharutyunyan/Desktop/project/BitScoolHomework/src/utils/dateFormater.js":"10","/Users/anushavanharutyunyan/Desktop/project/BitScoolHomework/src/Redux/reducers/contactReducer.js":"11"},{"size":3329,"mtime":1686813169429,"results":"12","hashOfConfig":"13"},{"size":3777,"mtime":1686813169430,"results":"14","hashOfConfig":"13"},{"size":841,"mtime":1686815551507,"results":"15","hashOfConfig":"13"},{"size":775,"mtime":1686813169430,"results":"16","hashOfConfig":"13"},{"size":885,"mtime":1686813169431,"results":"17","hashOfConfig":"13"},{"size":1066,"mtime":1686813169429,"results":"18","hashOfConfig":"13"},{"size":5402,"mtime":1686816239765,"results":"19","hashOfConfig":"13"},{"size":3367,"mtime":1686813169432,"results":"20","hashOfConfig":"13"},{"size":618,"mtime":1686813169434,"results":"21","hashOfConfig":"13"},{"size":89,"mtime":1686813169434,"results":"22","hashOfConfig":"13"},{"size":1243,"mtime":1686813169429,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"789rdh",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/anushavanharutyunyan/Desktop/project/BitScoolHomework/src/App.js",[],["50","51"],"/Users/anushavanharutyunyan/Desktop/project/BitScoolHomework/src/Redux/reducers/todoReducer.js",[],"/Users/anushavanharutyunyan/Desktop/project/BitScoolHomework/src/Redux/store.js",[],["52","53"],"/Users/anushavanharutyunyan/Desktop/project/BitScoolHomework/src/Redux/reducers/singleTaskReducer.js",[],["54","55"],"/Users/anushavanharutyunyan/Desktop/project/BitScoolHomework/src/componets/NavBar/NavBar.jsx",[],"/Users/anushavanharutyunyan/Desktop/project/BitScoolHomework/src/Redux/reducers/searchReducer.js",[],"/Users/anushavanharutyunyan/Desktop/project/BitScoolHomework/src/componets/Search/Search.jsx",["56","57","58","59","60","61","62","63"],"/Users/anushavanharutyunyan/Desktop/project/BitScoolHomework/src/componets/SingleTask/SingleTask.jsx",["64"],"import { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Button } from 'react-bootstrap';\nimport TaskModal from '../TaskModal/TaskModal';\nimport SpinnerComp from '../Spinner/Spinner';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrash, faEdit } from '@fortawesome/free-solid-svg-icons';\nimport {\n    setSingleTaskThunk,\n    deleteOneTaskThunk,\n    editeTaskThunk,\n    toggleSingleEditeModal,\n    resetSingleTaskState,\n} from '../../Redux/action';\nimport styles from './singletask.module.css';\n\nconst SingleTask = (props) => {\n    const { id } = props.match.params;\n    const { history, setSingleTaskThunk, resetSingleTaskState } = props;\n\n    useEffect(() => {\n        setSingleTaskThunk(id, history);\n        return function () {\n            resetSingleTaskState();\n        };\n    }, []);\n\n    const { singleTask, isEditeModal, loading } = props;\n\n    if (!singleTask || loading) return <SpinnerComp />;\n    return (\n        <>\n            <div className={styles.signgleTask}>\n                <h1>Single Task</h1>\n                <div>\n                    <p>Title: {singleTask.title}</p>\n                    <p>Description: {singleTask.description}</p>\n                </div>\n                <div className={styles.btn_div}>\n                    <Button\n                        variant=\"warning\"\n                        className={styles.btn}\n                        onClick={props.toggleSingleEditeModal}\n                    >\n                        <FontAwesomeIcon icon={faEdit} />\n                    </Button>\n                    <Button\n                        variant=\"danger\"\n                        className={styles.btn}\n                        onClick={() =>\n                            props.deleteOneTaskThunk(singleTask._id, history)\n                        }\n                    >\n                        <FontAwesomeIcon icon={faTrash} />\n                    </Button>\n                </div>\n            </div>\n            {isEditeModal && (\n                <TaskModal\n                    onHide={props.toggleSingleEditeModal}\n                    onSubmit={(editedTask) =>\n                        props.editeTaskThunk(editedTask, 'singleTask')\n                    }\n                    editedTask={singleTask}\n                />\n            )}\n            {loading && <SpinnerComp />}\n        </>\n    );\n};\n\nconst mapStateToProps = (state) => {\n    const { singleTask, isEditeModal } = state.singleTaskState;\n    return {\n        singleTask,\n        isEditeModal,\n        loading: state.globalState.loading,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        setSingleTaskThunk: (id, history) =>\n            dispatch((dispatch) => setSingleTaskThunk(dispatch, id, history)),\n        deleteOneTaskThunk: (id, history) =>\n            dispatch((dispatch) => deleteOneTaskThunk(dispatch, id, history)),\n        editeTaskThunk: (editedTask, page) =>\n            dispatch((dispatch) =>\n                editeTaskThunk(dispatch, editedTask, (page = 'singleTask'))\n            ),\n        toggleSingleEditeModal: () =>\n            dispatch((dispatch) => toggleSingleEditeModal(dispatch)),\n        resetSingleTaskState: () =>\n            dispatch((dispatch) => resetSingleTaskState(dispatch)),\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SingleTask);\n","/Users/anushavanharutyunyan/Desktop/project/BitScoolHomework/src/utils/validator.jsx",[],"/Users/anushavanharutyunyan/Desktop/project/BitScoolHomework/src/utils/dateFormater.js",[],"/Users/anushavanharutyunyan/Desktop/project/BitScoolHomework/src/Redux/reducers/contactReducer.js",[],{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"65","replacedBy":"69"},{"ruleId":"67","replacedBy":"70"},{"ruleId":"65","replacedBy":"71"},{"ruleId":"67","replacedBy":"72"},{"ruleId":"73","severity":1,"message":"74","line":2,"column":16,"nodeType":"75","messageId":"76","endLine":2,"endColumn":22},{"ruleId":"73","severity":1,"message":"77","line":4,"column":8,"nodeType":"75","messageId":"76","endLine":4,"endColumn":18},{"ruleId":"73","severity":1,"message":"78","line":60,"column":9,"nodeType":"75","messageId":"76","endLine":60,"endColumn":16},{"ruleId":"73","severity":1,"message":"79","line":61,"column":9,"nodeType":"75","messageId":"76","endLine":61,"endColumn":26},{"ruleId":"73","severity":1,"message":"80","line":67,"column":9,"nodeType":"75","messageId":"76","endLine":67,"endColumn":19},{"ruleId":"73","severity":1,"message":"81","line":68,"column":9,"nodeType":"75","messageId":"76","endLine":68,"endColumn":19},{"ruleId":"73","severity":1,"message":"82","line":69,"column":9,"nodeType":"75","messageId":"76","endLine":69,"endColumn":21},{"ruleId":"73","severity":1,"message":"83","line":70,"column":9,"nodeType":"75","messageId":"76","endLine":70,"endColumn":21},{"ruleId":"84","severity":1,"message":"85","line":26,"column":8,"nodeType":"86","endLine":26,"endColumn":10,"suggestions":"87"},"no-native-reassign",["88"],"no-negated-in-lhs",["89"],["88"],["89"],["88"],["89"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'DatePicker' is defined but never used.","'setDate' is assigned a value but never used.","'sortOrFilterThunk' is assigned a value but never used.","'create_lte' is assigned a value but never used.","'create_gte' is assigned a value but never used.","'complete_lte' is assigned a value but never used.","'complete_gte' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history', 'id', 'resetSingleTaskState', and 'setSingleTaskThunk'. Either include them or remove the dependency array.","ArrayExpression",["90"],"no-global-assign","no-unsafe-negation",{"desc":"91","fix":"92"},"Update the dependencies array to be: [history, id, resetSingleTaskState, setSingleTaskThunk]",{"range":"93","text":"94"},[843,845],"[history, id, resetSingleTaskState, setSingleTaskThunk]"]